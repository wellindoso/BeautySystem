/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package formularios;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entidade.Agendamento;
import entidade.Funcionario;
import entidade.Produto;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
import javax.swing.JFrame;
/**
 *
 * @author LAB4
 */
public class Frm_Rel_Prod extends javax.swing.JFrame {

    Funcionario objFuncionario = new Funcionario();
    private dao.FuncionarioDAO objFuncionarioDAO = new dao.FuncionarioDAO();
    private dao.AgendamentoDAO objAgendamentoDAO = new dao.AgendamentoDAO();
    Date date = new Date();
    Date date2 = new Date();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat sdfSql = new SimpleDateFormat("yyyy-MM-dd");
    List<Agendamento> agendamentos = new ArrayList();
    double valorTotal;
    DecimalFormat fmt = new DecimalFormat("0.00");
    public Frm_Rel_Prod(Funcionario Principal) {
        if(Principal.getNivelAcesso().equals("Gerente"))
        {
            initComponents();
            setLocationRelativeTo(null);
            sdf.setLenient(false);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nivel de Acesso não permute acessar esta função!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tb_codiFun = new javax.swing.JTextField();
        tb_pesqiusar = new javax.swing.JButton();
        lb_nomeFun = new javax.swing.JLabel();
        tb_dataInicial = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tb_dataFinal = new javax.swing.JFormattedTextField();
        tb_gerarRelatorioProd = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BeautySystem - Relatório de Produtividade");

        jLabel1.setText("Código do Funcionário:");

        tb_codiFun.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_codiFunFocusLost(evt);
            }
        });

        tb_pesqiusar.setText("Pesqiusar...");
        tb_pesqiusar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_pesqiusarActionPerformed(evt);
            }
        });

        try {
            tb_dataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataInicialFocusLost(evt);
            }
        });

        jLabel2.setText("Data Inicial:");

        jLabel3.setText("Data Final:");

        try {
            tb_dataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataFinalFocusLost(evt);
            }
        });

        tb_gerarRelatorioProd.setText("Gerar Relatório de Produtividade");
        tb_gerarRelatorioProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_gerarRelatorioProdActionPerformed(evt);
            }
        });

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_codiFun, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_pesqiusar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_nomeFun))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tb_gerarRelatorioProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addGap(0, 156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tb_codiFun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tb_pesqiusar)
                    .addComponent(lb_nomeFun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_gerarRelatorioProd)
                    .addComponent(jButton1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void set_lbNomeFunc(String conteudo)
    {
        tb_codiFun.setText(conteudo);
        lb_nomeFun.setText(objFuncionarioDAO.consultar(Long.parseLong(tb_codiFun.getText())).getNome());
    }
    private void tb_codiFunFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_codiFunFocusLost
    if(tb_codiFun.getText().equals(""))
        JOptionPane.showMessageDialog(this, "Código Não Informado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
    else
        lb_nomeFun.setText(objFuncionarioDAO.consultar(Long.parseLong(tb_codiFun.getText())).getNome());
    }//GEN-LAST:event_tb_codiFunFocusLost

    private void tb_dataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataInicialFocusLost
    try
    {
        date = sdf.parse(tb_dataInicial.getText());
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataInicial.setText("");
        tb_dataInicial.requestFocus();
    }
    }//GEN-LAST:event_tb_dataInicialFocusLost
    private boolean validarCampos()
    {
        if (!tb_codiFun.getText().equals("")&&date.getTime()<=date2.getTime())
            return true;
        else
        
            
            return false;
        
            
    }
    private void tb_dataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataFinalFocusLost
     try
    {
        date2 = sdf.parse(tb_dataFinal.getText());
        if(date2.getTime()<date.getTime() )
        {
            JOptionPane.showMessageDialog(this, "Data Final Maior que Data Inicial", "Informação", JOptionPane.INFORMATION_MESSAGE);
            tb_dataInicial.requestFocus();
        }
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataFinal.setText("");
        tb_dataFinal.requestFocus();
    }
    }//GEN-LAST:event_tb_dataFinalFocusLost

    private void tb_gerarRelatorioProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_gerarRelatorioProdActionPerformed
        if(validarCampos())
        {
            gerarRelatorioDeProdutividade();   
        }
        else
            JOptionPane.showMessageDialog(this, "Preencha todos os campos corretamente", "Informação", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tb_gerarRelatorioProdActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tb_pesqiusarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_pesqiusarActionPerformed
        Frm_Cons_Func_Venda f1 = new Frm_Cons_Func_Venda(Frm_Rel_Prod.this,4);
        f1.setVisible(true);
    }//GEN-LAST:event_tb_pesqiusarActionPerformed
    private void criaDiretorio(String novoDiretorio){  
    String nomeDiretorio = null;   
    String separador = java.io.File.separator;   
    try {       
         nomeDiretorio = "C:" + separador + novoDiretorio;   
         if (!new File(nomeDiretorio).exists()) { // Verifica se o diretório existe.   
             (new File(nomeDiretorio)).mkdir();   // Cria o diretório   
         }   
    } catch (Exception ex) {   
         JOptionPane.showMessageDialog(null,"Erro","Erro ao criar o diretório" + ex.toString(),JOptionPane.ERROR_MESSAGE);   
    }  
}
    private void gerarRelatorioDeProdutividade()
    {
        criaDiretorio("relatoriosBeautySystem");
        Document relatorioProdutividade = new Document(PageSize.A4);
            try{
            PdfWriter.getInstance(relatorioProdutividade , new FileOutputStream("C:\\relatoriosBeautySystem\\relatorioProdutividade.pdf"));
            relatorioProdutividade.open();
            Paragraph paragrafo = new Paragraph("Relatório de Produtividade de Funcionario");    
             paragrafo.setAlignment(Element.ALIGN_CENTER);
            relatorioProdutividade.add(new Paragraph(paragrafo));
            Paragraph paragrafoNomeCli = new Paragraph("Relatório de Agendamentos Realizados Pelo Funcionario "+lb_nomeFun.getText()+" entre "+sdf.format(date)+" e "+sdf.format(date2));    
             paragrafoNomeCli.setAlignment(Element.ALIGN_CENTER);
              relatorioProdutividade.add(new Paragraph(paragrafoNomeCli));
             relatorioProdutividade.add(new Paragraph("\n"));
             PdfPTable tabela = new PdfPTable(6);
             PdfPCell header = new PdfPCell(new Paragraph("Relatório de Produtividade"));
            header.setColspan(6);
            tabela.addCell(header);	
            tabela.addCell("Data do Agendamento");
            tabela.addCell("Codigo do Agendamento");
            tabela.addCell("Cliente");
            tabela.addCell("Hora Inicial");
            tabela.addCell("Hora Final");
            tabela.addCell("Valor de Mão de Obra");
            agendamentos = objAgendamentoDAO.consultarPorData("IdFuncionario", tb_codiFun.getText(), sdfSql.format(date), sdfSql.format(date2));
            if (agendamentos.size()<=0)
                {
                JOptionPane.showMessageDialog(this, "Nenhum Registro Encontrado", "Erro", JOptionPane.INFORMATION_MESSAGE);
                     dispose();
            }
            
            else
            {
            for(Agendamento ag : objAgendamentoDAO.consultarPorData("IdFuncionario", tb_codiFun.getText(), sdfSql.format(date), sdfSql.format(date2)))
            {
                {
                tabela.addCell(sdf.format(ag.getData()));
                tabela.addCell(Integer.toString(ag.getCodigo()));
                tabela.addCell(ag.getCliente().getNome());
                tabela.addCell(ag.getHoraInicial());
                tabela.addCell(ag.getHoraFinal());
                tabela.addCell(fmt.format(ag.getValorAgendamento()));
                valorTotal += ag.getValorAgendamento();
                }
                
            }
            PdfPCell header1 = new PdfPCell(new Paragraph("Total"));
            header1.setColspan(5);
            tabela.addCell(header1);
            tabela.addCell(fmt.format(valorTotal));
            relatorioProdutividade.add(tabela);
            Runtime.getRuntime().exec (new String[]{"cmd.exe", "/c", "start", "C:\\relatoriosBeautySystem\\relatorioProdutividade.pdf"}); 
            }
            }
            catch(DocumentException de){
            de.printStackTrace();
        }catch(IOException ioe){
            ioe.printStackTrace();
        }finally{
            relatorioProdutividade.close();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Prod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Prod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Prod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Prod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Rel_Prod(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lb_nomeFun;
    private javax.swing.JTextField tb_codiFun;
    private javax.swing.JFormattedTextField tb_dataFinal;
    private javax.swing.JFormattedTextField tb_dataInicial;
    private javax.swing.JButton tb_gerarRelatorioProd;
    private javax.swing.JButton tb_pesqiusar;
    // End of variables declaration//GEN-END:variables
}
