/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entidade.Agendamento;
import entidade.Cliente;
import entidade.Compra;
import entidade.Funcionario;
import entidade.Produto;
import entidade.Venda;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Mello_PC
 */
public class Frm_Rel_Clientes extends javax.swing.JFrame {

    /**
     * Creates new form Frm_Rel_Clientes
     */
    private dao.ClienteDAO objClienteDAO = new dao.ClienteDAO();
    Cliente objCliente  = new Cliente();
    Date date = new Date();
    Date date2 = new Date();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat sdfSql = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat fmt = new DecimalFormat("0.00");
    List<Venda> vendas = new ArrayList();
    List<Agendamento> agendamentos = new ArrayList();
    dao.VendaDAO objVendaDAO = new dao.VendaDAO();
    dao.AgendamentoDAO objAgendamentoDAO = new dao.AgendamentoDAO();
    int i, j;
    public Frm_Rel_Clientes(Funcionario Principal) {
       if(Principal.getNivelAcesso().equals("Gerente"))
       {
        initComponents();
        setLocationRelativeTo(null);
        sdf.setLenient(false);
       }
        else
        {
            JOptionPane.showMessageDialog(this, "Nivel de Acesso não permute acessar esta função!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tb_codiCli = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lb_nomeCli = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tb_dataInicial = new javax.swing.JFormattedTextField();
        tb_dataFinal = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BeautySystem - Relatório de Clientes");

        jLabel1.setText("Código do Cliente:");

        tb_codiCli.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_codiCliFocusLost(evt);
            }
        });

        jButton1.setText("Pesquisar...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Data Inicial:");

        try {
            tb_dataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataInicialFocusLost(evt);
            }
        });

        try {
            tb_dataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataFinalFocusLost(evt);
            }
        });

        jLabel3.setText("Data Inicial:");

        jButton2.setText("Gerar Relatório de Clientes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tb_codiCli, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_nomeCli))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tb_codiCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(lb_nomeCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void setTb_codiCli(String conteudo)
    {
        tb_codiCli.setText(conteudo);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     Frm_Cons_Cliente2 f1 = new Frm_Cons_Cliente2(Frm_Rel_Clientes.this,4);
     f1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tb_codiCliFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_codiCliFocusLost
        
        objCliente = objClienteDAO.consultar(Long.parseLong(tb_codiCli.getText()));
        if(objCliente.getNome()!=null)
        lb_nomeCli.setText(objCliente.getNome());
        else
        {
            JOptionPane.showMessageDialog(this, "Nenhum registro encontrado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            tb_codiCli.setText("");
            tb_codiCli.requestFocus();
        }
    }//GEN-LAST:event_tb_codiCliFocusLost

    private void tb_dataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataInicialFocusLost
     try
    {
        date = sdf.parse(tb_dataInicial.getText());
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataInicial.setText("");
        tb_dataInicial.requestFocus();
    }
    }//GEN-LAST:event_tb_dataInicialFocusLost

    private void tb_dataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataFinalFocusLost
      try
    {
        date2 = sdf.parse(tb_dataFinal.getText());
        if(date2.getTime()<date.getTime() )
        {
            JOptionPane.showMessageDialog(this, "Data Final Maior que Data Inicial", "Informação", JOptionPane.INFORMATION_MESSAGE);
            tb_dataInicial.requestFocus();
        }
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataFinal.setText("");
        tb_dataFinal.requestFocus();
    }
    }//GEN-LAST:event_tb_dataFinalFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      if(validarCampos())
      {
          try {
              gerarRelatorioDeClientes();
          } catch (IOException ex) {
              Logger.getLogger(Frm_Rel_Clientes.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
      else
          JOptionPane.showMessageDialog(this, "Preencha os Dados Corretamente", "Informação", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed
    private void criaDiretorio(String novoDiretorio){  
    String nomeDiretorio = null;   
    String separador = java.io.File.separator;   
    try {       
         nomeDiretorio = "C:" + separador + novoDiretorio;   
         if (!new File(nomeDiretorio).exists()) { // Verifica se o diretório existe.   
             (new File(nomeDiretorio)).mkdir();   // Cria o diretório   
         }   
    } catch (Exception ex) {   
         JOptionPane.showMessageDialog(null,"Erro","Erro ao criar o diretório" + ex.toString(),JOptionPane.ERROR_MESSAGE);   
    }  
    }
    private void gerarRelatorioDeClientes() throws FileNotFoundException, IOException
    {
        criaDiretorio("relatoriosBeautySystem");
        Document relatorioClientes = new Document(PageSize.A4);
            try{
            PdfWriter.getInstance(relatorioClientes , new FileOutputStream("C:\\relatoriosBeautySystem\\relatorioClientes.pdf"));
            relatorioClientes.open();
            Paragraph paragrafo = new Paragraph("Relatório de Clientes");    
             paragrafo.setAlignment(Element.ALIGN_CENTER);
            relatorioClientes.add(new Paragraph(paragrafo));
            Paragraph paragrafoNomeCli = new Paragraph("Relatório de Vendas e Agendamentos Realizados pelo Cliente "+tb_codiCli.getText()+" - "+lb_nomeCli.getText()+" no período de "+sdf.format(date)+" e "+sdf.format(date2));    
             paragrafoNomeCli.setAlignment(Element.ALIGN_CENTER);
             relatorioClientes.add(new Paragraph(paragrafoNomeCli));
             relatorioClientes.add(new Paragraph("\n"));
             PdfPTable tabela = new PdfPTable(5);
             PdfPCell header = new PdfPCell(new Paragraph("Relatório de Atividades dos Clientes"));
            header.setColspan(5);
            tabela.addCell(header);	
            tabela.addCell("Data");
            tabela.addCell("Tipo de Operação");
            tabela.addCell("Codigo");
            tabela.addCell("Valor de Venda/Agendamento");
            tabela.addCell("Status de Agendamento");
            vendas = objVendaDAO.consultarPorDataeCliente(sdfSql.format(date), sdfSql.format(date2), objCliente.getCodigo());
            agendamentos = objAgendamentoDAO.consultarPorDataeCliente(sdfSql.format(date), sdfSql.format(date2), objCliente.getCodigo());
            if(agendamentos.size()<=0 && vendas.size()<=0)
            {
                JOptionPane.showMessageDialog(this, "Nenhum Registro Encontrado", "Erro", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
            else
            {
            for (i=0; i<agendamentos.size();i++)
            {
                for (j=0; j<vendas.size();j++)
                {
                    if(i==0)
                    {
                        if(vendas.get(j).getDataVenda().getTime()<= agendamentos.get(i).getData().getTime())
                        {
                            tabela.addCell(sdf.format(vendas.get(j).getDataVenda()));
                            tabela.addCell("Venda");
                            tabela.addCell(Integer.toString(vendas.get(j).getCodigo()));
                            tabela.addCell(fmt.format(vendas.get(j).getValorVenda()));
                            tabela.addCell("");
                        }
                    }
                    else if(vendas.get(j).getDataVenda().getTime()<= agendamentos.get(i).getData().getTime()&&(vendas.get(j).getDataVenda().getTime()>agendamentos.get(i-1).getData().getTime()))
                    {
                            tabela.addCell(sdf.format(vendas.get(j).getDataVenda()));
                            tabela.addCell("Venda");
                            tabela.addCell(Integer.toString(vendas.get(j).getCodigo()));
                            tabela.addCell(fmt.format(vendas.get(j).getValorVenda()));
                            tabela.addCell("");
                    }
                }
                tabela.addCell(sdf.format(agendamentos.get(i).getData()));
                tabela.addCell("Agendamento");
                tabela.addCell(Integer.toString(agendamentos.get(i).getCodigo()));
                tabela.addCell(fmt.format(agendamentos.get(i).getValorAgendamento()));
                tabela.addCell(agendamentos.get(i).getStatus());
                
            }
            for(Venda vend: vendas)
                {
                    if(agendamentos.size()==0)
                    {
                            tabela.addCell(sdf.format(vend.getDataVenda()));
                            tabela.addCell("Venda");
                            tabela.addCell(Integer.toString(vend.getCodigo()));
                            tabela.addCell(fmt.format(vend.getValorVenda()));
                            tabela.addCell(""); 
                    }
                    else if(vend.getDataVenda().getTime()>agendamentos.get(agendamentos.size()-1).getData().getTime())
                    {
                            tabela.addCell(sdf.format(vend.getDataVenda()));
                            tabela.addCell("Venda");
                            tabela.addCell(Integer.toString(vend.getCodigo()));
                            tabela.addCell(fmt.format(vend.getValorVenda()));
                            tabela.addCell(""); 
                               
                    }
                }
            
            relatorioClientes.add(tabela);
            Runtime.getRuntime().exec (new String[]{"cmd.exe", "/c", "start", "C:\\relatoriosBeautySystem\\relatorioClientes.pdf"}); 
            }
            }
            catch(DocumentException de){
            de.printStackTrace();
        }finally{
            relatorioClientes.close();
        }
            
    }
    private boolean validarCampos()
    {
        if (!tb_codiCli.getText().equals("")&&date.getTime()<=date2.getTime())
            return true;
        else
            return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Rel_Clientes(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lb_nomeCli;
    private javax.swing.JTextField tb_codiCli;
    private javax.swing.JFormattedTextField tb_dataFinal;
    private javax.swing.JFormattedTextField tb_dataInicial;
    // End of variables declaration//GEN-END:variables
}
