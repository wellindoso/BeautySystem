/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entidade.Compra;
import entidade.Funcionario;
import entidade.Produto;
import entidade.Venda;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Mello_PC
 */
public class Frm_Rel_Movimentacao extends javax.swing.JFrame {

    /**
     * Creates new form Frm_Rel_Movimentacao
     */
    dao.ProdutoDAO objProdutoDAO = new dao.ProdutoDAO();
    Produto objProduto = new Produto();
      Date date = new Date();
    Date date2 = new Date();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat sdfSql = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat fmt = new DecimalFormat("0.00");
    List<Venda> vendas = new ArrayList();
    List<Compra> compras = new ArrayList();
    dao.VendaDAO objVendaDAO = new dao.VendaDAO();
    dao.CompraDAO objCompraDAO = new dao.CompraDAO();
    int i, j;
    public Frm_Rel_Movimentacao(Funcionario Principal) {
       if(Principal.getNivelAcesso().equals("Gerente"))
       {
           initComponents();
           setLocationRelativeTo(null);
       sdf.setLenient(false);
       }        
        else
        {
            JOptionPane.showMessageDialog(this, "Nivel de Acesso não permute acessar esta função!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            
        }
       this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tb_codiPro = new javax.swing.JTextField();
        bt_pesquisaPro = new javax.swing.JButton();
        lb_descPro = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tb_dataInicial = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        tb_dataFinal = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BeautySystem - Relatório de Movimentação de Produtos");

        jLabel1.setText("Código do Produto:");

        tb_codiPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_codiProFocusLost(evt);
            }
        });

        bt_pesquisaPro.setText("Pesquisar...");
        bt_pesquisaPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_pesquisaProActionPerformed(evt);
            }
        });

        jLabel2.setText("Data Inicial:");

        try {
            tb_dataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataInicialFocusLost(evt);
            }
        });

        jLabel3.setText("Data Final:");

        try {
            tb_dataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tb_dataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tb_dataFinalFocusLost(evt);
            }
        });

        jButton1.setText("Gerar Relatório");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tb_codiPro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_pesquisaPro)
                        .addGap(8, 8, 8)
                        .addComponent(lb_descPro))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jButton2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tb_codiPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_pesquisaPro)
                    .addComponent(lb_descPro))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tb_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tb_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     if(validarCampos())
     {
         try {
             gerarRelatorioDeMovimentacao();
         } catch (FileNotFoundException ex) {
             JOptionPane.showMessageDialog(this, "Arquivo não Encotrado", "Informação", JOptionPane.INFORMATION_MESSAGE);
         } catch (IOException ex) {
             Logger.getLogger(Frm_Rel_Movimentacao.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
     else
         JOptionPane.showMessageDialog(this, "Preencha todos os campos Corretamente", "Informação", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed
    private void criaDiretorio(String novoDiretorio){  
    String nomeDiretorio = null;   
    String separador = java.io.File.separator;   
    try {       
         nomeDiretorio = "C:" + separador + novoDiretorio;   
         if (!new File(nomeDiretorio).exists()) { // Verifica se o diretório existe.   
             (new File(nomeDiretorio)).mkdir();   // Cria o diretório   
         }   
    } catch (Exception ex) {   
         JOptionPane.showMessageDialog(null,"Erro","Erro ao criar o diretório" + ex.toString(),JOptionPane.ERROR_MESSAGE);   
    }  
    }
    private void gerarRelatorioDeMovimentacao() throws FileNotFoundException, IOException
    {
        criaDiretorio("relatoriosBeautySystem");
        Document relatorioMovimentacao = new Document(PageSize.A4);
            try{
            PdfWriter.getInstance(relatorioMovimentacao , new FileOutputStream("C:\\relatoriosBeautySystem\\relatorioMovimentacao.pdf"));
            relatorioMovimentacao.open();
            Paragraph paragrafo = new Paragraph("Relatório de Movimentação de Produtos");    
             paragrafo.setAlignment(Element.ALIGN_CENTER);
            relatorioMovimentacao.add(new Paragraph(paragrafo));
            Paragraph paragrafoNomeCli = new Paragraph("Relatório de Movimentação do Produto "+tb_codiPro.getText()+" - "+lb_descPro.getText()+" no período de "+sdf.format(date)+" e "+sdf.format(date2));    
             paragrafoNomeCli.setAlignment(Element.ALIGN_CENTER);
              relatorioMovimentacao.add(new Paragraph(paragrafoNomeCli));
             relatorioMovimentacao.add(new Paragraph("\n"));
             PdfPTable tabela = new PdfPTable(6);
             PdfPCell header = new PdfPCell(new Paragraph("Relatório de Movimentação de Produtos"));
            header.setColspan(6);
            tabela.addCell(header);	
            tabela.addCell("Data");
            tabela.addCell("Tipo de Operação");
            tabela.addCell("Codigo");
            tabela.addCell("Quantidade");
            tabela.addCell("Cliente/Fornecedor");
            tabela.addCell("Valor de Compra/Venda");
            vendas = objVendaDAO.consultarPorData(sdfSql.format(date), sdfSql.format(date2));
            compras = objCompraDAO.consultarPorData(sdfSql.format(date), sdfSql.format(date2));
            if(compras.size()<=0 && vendas.size()<=0)
            {
                JOptionPane.showMessageDialog(this, "Nenhum Registro Encontrado", "Erro", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
            else
            {
            for (i=0; i<compras.size();i++)
            {
                for (j=0; j<vendas.size();j++)
                {
                    if(i==0)
                    {
                        if(vendas.get(j).getDataVenda().getTime()<= compras.get(i).getDataCompra().getTime())
                        {
                            for(Produto p: vendas.get(j).getProdutos())
                        {
                            if(p.getCodigo()==objProduto.getCodigo())
                            {
                                tabela.addCell(sdf.format(vendas.get(j).getDataVenda()));
                                tabela.addCell("Venda");
                                tabela.addCell(Integer.toString(vendas.get(j).getCodigo()));
                                tabela.addCell(Integer.toString(p.getQuantidade()));
                                tabela.addCell(vendas.get(j).getCliente().getNome());
                                tabela.addCell(fmt.format(p.getValorVenda()));
                            }
                        }
                        }
                    }
                    else if(vendas.get(j).getDataVenda().getTime()<= compras.get(i).getDataCompra().getTime()&&(vendas.get(j).getDataVenda().getTime()>compras.get(i-1).getDataCompra().getTime()))
                    {
                        for(Produto p: vendas.get(j).getProdutos())
                        {
                            if(p.getCodigo()==objProduto.getCodigo())
                            {
                                tabela.addCell(sdf.format(vendas.get(j).getDataVenda()));
                                tabela.addCell("Venda");
                                tabela.addCell(Integer.toString(vendas.get(j).getCodigo()));
                                tabela.addCell(Integer.toString(p.getQuantidade()));
                                tabela.addCell(vendas.get(j).getCliente().getNome());
                                tabela.addCell(fmt.format(p.getValorVenda()));
                            }
                        }
                    }
                }
                for(Produto p : compras.get(i).getProdutos())
                {
                    if (p.getCodigo() == objProduto.getCodigo())
                    {
                                tabela.addCell(sdf.format(compras.get(i).getDataCompra()));
                                tabela.addCell("Compra");
                                tabela.addCell(Integer.toString(compras.get(i).getCodigo()));
                                tabela.addCell(Integer.toString(p.getQuantidade()));
                                tabela.addCell(compras.get(i).getFornecedor().getNomeFantasia());
                                tabela.addCell(fmt.format(p.getValorCompra()));
                    }
                }
                
            }
            for(Venda vend: vendas)
                {
                    if(compras.size()==0)
                    {
                        for(Produto p: vend.getProdutos())
                                {
                                    if(p.getCodigo()==objProduto.getCodigo())
                                    {
                                        tabela.addCell(sdf.format(vend.getDataVenda()));
                                        tabela.addCell("Venda");
                                        tabela.addCell(Integer.toString(vend.getCodigo()));
                                        tabela.addCell(Integer.toString(p.getQuantidade()));
                                        tabela.addCell(vend.getCliente().getNome());
                                        tabela.addCell(fmt.format(p.getValorVenda()));
                                    }
                                    
                                }
                    }
                    else if(vend.getDataVenda().getTime()>compras.get(compras.size()-1).getDataCompra().getTime())
                    {
                                for(Produto p: vend.getProdutos())
                                {
                                    if(p.getCodigo()==objProduto.getCodigo())
                                    {
                                        tabela.addCell(sdf.format(vend.getDataVenda()));
                                        tabela.addCell("Venda");
                                        tabela.addCell(Integer.toString(vend.getCodigo()));
                                        tabela.addCell(Integer.toString(p.getQuantidade()));
                                        tabela.addCell(vend.getCliente().getNome());
                                        tabela.addCell(fmt.format(p.getValorVenda()));
                                    }
                                    
                                }
                               
                    }
                }
            
            relatorioMovimentacao.add(tabela);
            Runtime.getRuntime().exec (new String[]{"cmd.exe", "/c", "start", "C:\\relatoriosBeautySystem\\relatorioMovimentacao.pdf"}); 
            }
            }
            catch(DocumentException de){
            de.printStackTrace();
        }finally{
            relatorioMovimentacao.close();
        }
    }
    public void setTb_CodiPro(String conteudo)
            {
                tb_codiPro.setText(conteudo);
                
            }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tb_codiProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_codiProFocusLost
            objProduto = objProdutoDAO.consultar(Long.parseLong(tb_codiPro.getText()));
            if(objProduto.getDescricao()== null)
            {
                JOptionPane.showMessageDialog(this, "Nenhum registro encontrado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                tb_codiPro.setText("");
                lb_descPro.setText("");
                tb_codiPro.requestFocus();
            }
            else
            lb_descPro.setText(objProduto.getDescricao());
    }//GEN-LAST:event_tb_codiProFocusLost

    private void bt_pesquisaProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_pesquisaProActionPerformed
        Frm_Cons_Pro2  f1 = new Frm_Cons_Pro2(Frm_Rel_Movimentacao.this, 3);
        f1.setVisible(true);
    }//GEN-LAST:event_bt_pesquisaProActionPerformed
    private boolean validarCampos()
    {
        if (!tb_codiPro.getText().equals("")&&date.getTime()<=date2.getTime())
            return true;
        else
            return false;
    }
    private void tb_dataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataInicialFocusLost
         try
    {
        date = sdf.parse(tb_dataInicial.getText());
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataInicial.setText("");
        tb_dataInicial.requestFocus();
    }
    }//GEN-LAST:event_tb_dataInicialFocusLost

    private void tb_dataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tb_dataFinalFocusLost
     try
    {
        date2 = sdf.parse(tb_dataFinal.getText());
        if(date2.getTime()<date.getTime() )
        {
            JOptionPane.showMessageDialog(this, "Data Final Maior que Data Inicial", "Informação", JOptionPane.INFORMATION_MESSAGE);
            tb_dataInicial.requestFocus();
        }
    }
    catch(ParseException e)
    {
        JOptionPane.showMessageDialog(this, "Data Invalida", "Informação", JOptionPane.INFORMATION_MESSAGE);
        tb_dataFinal.setText("");
        tb_dataFinal.requestFocus();
    }
    }//GEN-LAST:event_tb_dataFinalFocusLost
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Movimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Movimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Movimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Rel_Movimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Rel_Movimentacao(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_pesquisaPro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lb_descPro;
    private javax.swing.JTextField tb_codiPro;
    private javax.swing.JFormattedTextField tb_dataFinal;
    private javax.swing.JFormattedTextField tb_dataInicial;
    // End of variables declaration//GEN-END:variables
}
